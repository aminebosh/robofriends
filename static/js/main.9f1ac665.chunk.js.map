{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+PAiBeA,EAbF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACzB,OACC,sBAAKC,UAAU,uDAAf,UACG,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACG,6BAAKF,IACL,4BAAIC,WCYGK,EAnBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAClB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCKCC,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,2CACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEEI,G,MARD,SAACC,GACd,OACO,qBAAKC,MAAO,CAAEC,UAAW,SAASC,OAAQ,kBAAkBC,OAAQ,SAApE,SACEJ,EAAMK,aCqDDC,E,kDAjDd,aAAc,IAAD,8BACZ,gBAeDC,eAAiB,SAACC,GAEjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAhBzC,EAAKC,MAAM,CACVvB,OAAO,GACPK,YAAY,IAJD,E,qDASV,WAAoB,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAWvC,WAAS,IAAD,OACDC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC/C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAElE,OAA+B,IAA3BF,KAAKP,MAAMvB,OAAOkC,OACd,yCAIP,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,uBACA,uBACA,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAvCLM,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAM/CX,M","file":"static/js/main.9f1ac665.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css'\r\n\r\n\r\nconst Card = ({name,email,id}) =>{\r\n\treturn (\r\n\t\t<div className='tc  dib br3 pa3 ma2 grow bw2 shadow-5 cardBackground'>\r\n\t\t\t  <img alt='robot' src={`https://robohash.org/${id}?200X200`}/>\r\n\t\t\t  <div>\r\n\t\t\t     <h2>{name}</h2>\r\n\t\t\t     <p>{email}</p>\r\n\t\t\t  </div>\r\n\t    </div>\t\r\n\t         \r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t   {\r\n\t\t   \trobots.map((user,i)=>{\r\n\t\t   \t\treturn(\r\n\t\t   \t\t\t<Card\r\n\t\t   \t\t\tkey ={i} \r\n\t\t   \t\t\tid={robots[i].id}\r\n\t\t   \t\t\tname={robots[i].name} \r\n\t\t   \t\t\temail={robots[i].email}\r\n\t\t   \t\t\t/>\r\n\t\t   \t\t);\r\n\t\t   \t})\r\n\t\t   }\r\n        </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa2 ba b--green bg-lightest-blue br-pill'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox; ","import React from 'react';\r\n\r\n\r\nconst Scroll =(props)=>{\r\n\treturn (\r\n        <div style={{ overflowY: 'scroll',border: '3px solid black',height :'600px'}}>\r\n        \t{props.children}\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield:''\r\n        }\r\n\t}\r\n\r\n\t\r\n    componentDidMount(){\r\n    \tfetch('https://jsonplaceholder.typicode.com/users')\r\n    \t.then(response=>response.json())\r\n    \t.then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n\t\r\n\tonSearchChange = (event)=> {\r\n\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t\t\r\n    }\r\n\r\n\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter(robots=>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif (this.state.robots.length===0){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t}\r\n\t\telse {\t\r\n\t\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\r\n\t\t    );\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}